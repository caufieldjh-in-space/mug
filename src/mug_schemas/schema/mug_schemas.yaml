---
id: https://w3id.org/my-org/mug_schemas
name: mug_schemas
title: mug_schemas
description: |-
  Schemas for Modular Universal Generators.
license: MIT
see_also:
  - https://caufieldjh-in-space.github.io/mug

prefixes:
  mug_schemas: https://w3id.org/caufieldjh-in-space/mug_schemas/
  linkml: https://w3id.org/linkml/
  biolink: https://w3id.org/biolink/
  schema: http://schema.org/
  PATO: http://purl.obolibrary.org/obo/PATO_
default_prefix: mug
default_range: string

imports:
  - linkml:types

classes:

  NamedThing:
    description: >-
      A generic grouping for any identifiable entity
    slots:
      - id
      - name
      - description
    class_uri: schema:Thing

  GeneratedThing:
    is_a: NamedThing
    description: >-
      Any set of data representing a single generated object.
      In MUG, this does not include the object's string
      representation, but rather all components used
      in generating that representation. Think of this
      like the ingredients list rather than the finished meal.

  Address:
    is_a: GeneratedThing
    description: >-
      A mailing address for a physical location.
    slots:
      - addressee
      - address_number
      - street
      - locality

  GeneratedThingCollection:
    tree_root: true
    description: >-
      A holder for GeneratedThing objects
    attributes:
      entries:
        range: GeneratedThing
        multivalued: true
        inlined: true

slots:
  id:
    identifier: true
    slot_uri: schema:identifier
    range: uriorcurie
    description: A unique identifier for a thing
  name:
    slot_uri: schema:name
    description: A human-readable name for a thing
  description:
    slot_uri: schema:description
    description: >-
      A human-readable description for a thing.
      For a GeneratedThing, this will be one potential
      string representation of the object.
  addressee:
    range: string
    any_of:
      - range: Person
      - range: Company
    description: >-
      The recipient of mail. May be a person or a
      company - the name is the most relevant part.
    todos: 
      - Add Person objects
      - Add Company objects
      - Unions can be tricky, so test this
  address_number:
    range: string
    multivalued: true
    description: >-
      The most specific component of a physical
      mailing address. Multi-line values are 
      represented by multivalues.
    examples:
      - "30"
      - "40B"
      - "Room 581"
      - "Floor 12"
      - "Bamberg Building"
    todos: 
      - add an enum for corporate departments
  street:
    range: string
    multivalued: true
    description: >-
      The street component of a physical mailing
      address. Unabbreviated by default (Street,
      not St.) Multi-line values are represented
      by multivalues. See examples.
    examples:
      - "Sandstone Street"
      - "Colonial Highway"
      - "Stevens Q. Puddleton Trail"
    todos: 
      - convert to a GeneratedThing, at least to make street type enum
  locality:
    range: string
    multivalued: true
    description: >-
      The broadest component of a physical mailing
      address. Should include postal code.
    examples:
      - "Kansas City, Missouri 64102, United States"
      - "Staples, Ontario N0P 2J0, Canada"
      - "14612 Falkensee, Germany"
    todos:
      - evaluate whether this really needs to be multivalued
      - convert to a GeneratedThing
      - but note that city, broader location, and postal code are all related
      - define a regex pattern (or patterns)
