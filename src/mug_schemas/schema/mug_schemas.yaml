---
id: https://w3id.org/my-org/mug_schemas
name: mug_schemas
title: mug_schemas
description: |-
  Schemas for Modular Universal Generators.
license: MIT
see_also:
  - https://caufieldjh-in-space.github.io/mug

prefixes:
  mug_schemas: https://w3id.org/caufieldjh-in-space/mug_schemas/
  linkml: https://w3id.org/linkml/
  biolink: https://w3id.org/biolink/
  schema: http://schema.org/
  PATO: http://purl.obolibrary.org/obo/PATO_
default_prefix: mug
default_range: string

imports:
  - linkml:types

classes:

  NamedThing:
    description: >-
      A generic grouping for any identifiable entity
    slots:
      - id
      - name
      - description
    class_uri: schema:Thing

  GeneratedThing:
    is_a: NamedThing
    description: >-
      Any set of data representing a single generated object.
      In MUG, this does not include the object's string
      representation, but rather all components used
      in generating that representation. Think of this
      like the ingredients list rather than the finished meal.

  Address:
    is_a: GeneratedThing
    description: >-
      A mailing address for a physical location.
      This is the general class - it doesn't include
      an addressee.
    slots:
      - address_number
      - street
      - locality

  ResidentialAddress:
    is_a: Address
    description: >-
      Address of a residential location.
    slot_usage:
      addressee:
        range: Person
        required: true

  WorkingAddress:
    is_a: Address
    description: >-
      Address of a workplace location.
      Technically this is a commercial address
      since it's specific to Company,
      but for now that can cover things
      like government agencies, too.
    slot_usage:
      addressee:
        range: Company
        required: true

  Person:
    is_a: GeneratedThing
    description: >-
      General class for people.
    slots:
      - full_name
    slot_usage:
      home_address:
        range: ResidentialAddress 
      work_address:
        range: WorkingAddress

  FullName:
    is_a: GeneratedThing
    description: >-
      All parts of a name.
    slots:
      - given_name
      - family_name
      - other_name
      - preferred_name
      - title
      - suffix

  GeneratedThingCollection:
    tree_root: true
    description: >-
      A holder for GeneratedThing objects
    attributes:
      entries:
        range: GeneratedThing
        multivalued: true
        inlined: true

slots:
  id:
    identifier: true
    slot_uri: schema:identifier
    range: uriorcurie
    description: A unique identifier for a thing
  name:
    slot_uri: schema:name
    description: A human-readable name for a thing
  description:
    slot_uri: schema:description
    description: >-
      A human-readable description for a thing.
      For a GeneratedThing, this will be one potential
      string representation of the object.
  addressee:
    range: string
    any_of:
      - range: Person
      - range: Company
    description: >-
      The recipient of mail. May be a person or a
      company - the name is the most relevant part.
    todos: 
      - Add Company objects
      - Unions can be tricky, so test this
  address_number:
    range: string
    multivalued: true
    description: >-
      The most specific component of a physical
      mailing address. Multi-line values are 
      represented by multivalues.
    examples:
      - "30"
      - "40B"
      - "Room 581"
      - "Floor 12"
      - "Bamberg Building"
    todos: 
      - add an enum for corporate departments
  street:
    range: string
    multivalued: true
    description: >-
      The street component of a physical mailing
      address. Unabbreviated by default (Street,
      not St.) Multi-line values are represented
      by multivalues. See examples.
    examples:
      - "Sandstone Street"
      - "Colonial Highway"
      - "Stevens Q. Puddleton Trail"
    todos: 
      - convert to a GeneratedThing, at least to make street type enum
  locality:
    range: string
    multivalued: true
    description: >-
      The broadest component of a physical mailing
      address. Should include postal code.
    examples:
      - "Kansas City, Missouri 64102, United States"
      - "Staples, Ontario N0P 2J0, Canada"
      - "14612 Falkensee, Germany"
    todos:
      - evaluate whether this really needs to be multivalued
      - convert to a GeneratedThing
      - but note that city, broader location, and postal code are all related
      - define a regex pattern (or patterns)
  full_name:
    range: FullName
    description: >-
      Slot for all name parts.
  given_name:
    range: string
    multivalued: true
    aliases:
      - first name
      - forename
    description: >-
      A given name. May be a mononym (i.e., the only name).
      When multivalued, implies spaces in between names.
    examples:
      - "Frances"
      - "Mary Kate"
      - "Sinbad"
  family_name:
    range: string
    multivalued: true
    aliases:
      - last name
      - surname
    description: >-
      A family name. Optional, so mononyms should go in
      given_name. For multvalued names like 
      "Duarte de PerÃ³n", the "de" particle should
      be part of the second name, not its own value.
    examples:
      - "Quigley"
      - "Branson-Danforth"
      - "de Souza"
  other_name:
    range: string
    multivalued: true
    aliases:
      - middle name
    description: >-
      A middle name or names, usually, or at least
      a name usually presented in between a given_name
      and a family_name.
  preferred_name:
    range: string
    multivalued: true
    aliases:
      - nickname
      - pet name
      - pseudonym
    description: >-
      Any name used to refer to a specific Person.
      Often presented in quotes, but that doesn't
      have to be the case here.
    examples:
      - "Jimmy"
      - "The Brick"
      - "xXDarksoul920Xx"
  title:
    range: string
    multivalued: true
    aliases:
      - prenominative
    description: >-
      A formal or informal prefix for a name.
      Use the full version, not an abbreviation.
    examples:
      - "Lady"
      - "Captain"
      - "His Holiness"
  suffix:
    range: string
    multivalued: true
    aliases:
      - postnominative
    description: >-
      A formal or informal postfix for a name.
      Use the full version, not an abbreviation.
      These can get messy about commas and such,
      but that's not a problem to be solved here.
    examples:
      - "Jr"
      - "IV"
      - "CEO"
      - "Professor Emeritus"
  home_address:
    range: ResidentialAddress
    multivalued: true
    description: >-
      One or more addresses where a person may live.
  work_address:
    range: WorkingAddress
    multivalued: true
    description: >-
      One or more addresses where a person may work.
